

@model Member.Models.Members

@{
    List<Member.Models.MemberType> MemberTypes = (List<Member.Models.MemberType>)ViewBag.MemberType;

}


@using (Html.BeginForm("Edit", "Members", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Members</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.memberId)

        <div class="form-group">
            @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="gender" name="gender" class="form-control">
                    <option value="Male" @(Model.gender.Trim() == "Male" ? "selected" : "")>Male</option>
                    <option value="Female" @(Model.gender.Trim() == "Female" ? "selected" : "")>Female</option>
                    <option value="Others" @(Model.gender.Trim() == "Others" ? "selected" : "")>Others</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.memberTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.memberTypeId, new SelectList(MemberTypes, "memberTypeId", "type"), htmlAttributes: new { @class = "form-control" })

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.entryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextBoxFor(model => model.entryDate, new { @type = "date", @class = "form-control datepicker", @Value = Model.entryDate.ToString("yyyy-MM-dd") })

                @Html.ValidationMessageFor(model => model.entryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.expiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.expiryDate, new { @type = "date", @class = "form-control datepicker", @Value = Model.expiryDate.ToString("yyyy-MM-dd") })

                @Html.ValidationMessageFor(model => model.expiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.memberFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.memberFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.memberFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.attachment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>Old Attachment : @Html.TextBoxFor(model => model.attachment, new { @class = "form-control", @readonly = true })</p>

                <input class="btn btn-default" type="file" name="attachmentFile" />

            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isActive)
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <<div class="form-group">
            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p>Old Image : @Html.TextBoxFor(model => model.image, new { @class = "form-control", @readonly = true })</p>

                <input class="btn btn-default" type="file" name="imageFile" />

            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
